'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Class ControlConfiguracion

'++LotusScript Development Environment:2:5:(Declarations):0:10
Class ControlConfiguracion
	
	Private ns As NotesSession
	Private db As NotesDatabase 
	
	Public Sub new
		Set ns = New NotesSession
		Set db = ns.CurrentDatabase
	End Sub
	
	Public Function violaClavePrimaria (sVista As String, claves As Variant, unid As String) As Boolean
		violaClavePrimaria = False
		Dim vw As NotesView
		Dim nd As NotesDocument
		Set vw = db.GetView(sVista)
		Set nd = vw.GetDocumentByKey(claves, True)
		If Not nd Is Nothing Then
			If nd.UniversalID <> unid Then
				violaClavePrimaria = True
			End If
		End If			
	End Function
	
	Public Function guardarFlujo(nd As NotesDocument) As String
		guardarFlujo = ""
		Dim claves(0) As String
		Dim formularios As Variant
		claves(0) = nd.nombre(0)
		If violaClavePrimaria("vwProgFlujos", claves, nd.unid(0)) Then
			guardarFlujo = "Debe modificar el nombre del flujo. El valor ingresado ha sido configurado previamente."
		Else
			formularios = Split(nd.formularios(0), ";")
			ForAll x In formularios
				claves(0) = CStr(x)
				If violaClavePrimaria("vwProgFormulariosFlujo", claves, nd.unid(0)) Then
					guardarFlujo = "El formulario '" + getNombreFormulario(CStr(x)) + "' ha sido configurado previamente con otro flujo."
					Exit ForAll
				End If
			End ForAll
		End If	
	End Function

	Public Function guardarEstado(nd As NotesDocument) As String
		guardarEstado = ""
		Dim claves(1) As String
		Dim keys(0) As String
		claves(0) = nd.flujo(0)
		claves(1) = nd.nombre(0)
		If violaClavePrimaria("vwProgEstadosFlujo", claves, nd.unid(0)) Then
			guardarEstado = "Debe modificar el nombre del estado. El valor ingresado ha sido configurado previamente para el mismo flujo."
		ElseIf nd.inicial(0) = "Si" Then
			keys(0) = nd.flujo(0)
			If violaClavePrimaria("vwProgEstadosIniciales", keys, nd.unid(0)) Then
				guardarEstado = "Ya existe un estado configurado como Inicial para el flujo seleccionado."
			End If
		End If
	End Function
	
	Public Function guardarNotificacion(nd As NotesDocument) As String
		guardarNotificacion = ""
		Dim claves(0) As String
		Dim forms As Variant
		Dim nomForm As String
		claves(0) = nd.nombre(0)
		If violaClavePrimaria("vwProgNotificaciones", claves, nd.unid(0)) Then
			guardarNotificacion = "Debe modificar el nombre de la notificaci√≥n . El valor ingresado ha sido configurado previamente."
		End If
	End Function
	
	Public Function guardarTransicion(nd As NotesDocument) As String
		guardarTransicion = ""
		Dim claves(2) As String
		claves(0) = nd.flujo(0)
		claves(1) = nd.estadoOrigen(0)
		claves(2) = nd.estadoDestino(0)
		If violaClavePrimaria("vwProgTransiciones", claves, nd.unid(0)) Then
			guardarTransicion = "Los valores de flujo, estado origen y estado destino coinciden con los de otro documento configurado previamente."
		End If
	End Function
	
	Public Function guardarReporte(nd As NotesDocument) As String
		guardarReporte = ""
		Dim claves(0) As String
		Dim forms As Variant
		Dim nomForm As String
		claves(0) = nd.nombre(0)
		If violaClavePrimaria("vwProgReportes", claves, nd.unid(0)) Then
			guardarReporte = "Debe modificar el nombre del reporte. El valor ingresado ha sido configurado previamente."
		End If
	End Function
	
	
	Function getNombreFormulario(codigo As String) As String 
		Dim nomFormulario As String 
		Select Case codigo
			Case "frSolicitudBono":
				nomFormulario = "Solicitud bono de tiempo"
		End Select	
		getNombreFormulario = nomFormulario	
	End Function
End Class